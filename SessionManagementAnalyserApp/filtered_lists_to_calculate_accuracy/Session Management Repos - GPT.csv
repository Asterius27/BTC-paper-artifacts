url,repo,answer,justification
https://github.com/cehyman/boiler-buy,cehyman_boiler-buy_master.txt,yes,"The README contains instructions for setting up a Django API and an Angular frontend, indicating that this is a web application with both backend and frontend components. It also provides details on running the app locally and testing it, confirming that it is indeed a web application."
https://github.com/bc-cisc3140-mw2-fall2019/class_project,bc-cisc3140-mw2-fall2019_class_project_master.txt,yes,"The README file provides information about a web application called Bulldog Buckets, including its requirements, how to run it using Flask, and references a separate README file for further details. This demonstrates that the project is indeed a web application hosted on a server."
https://github.com/simonw/django-sql-dashboard,simonw_django-sql-dashboard_master.txt,yes,"The README file describes 'django-sql-dashboard' as a web application that provides an authenticated interface for executing read-only SQL queries directly against a PostgreSQL database. It allows for ad-hoc analysis, debugging, and the creation of reporting dashboards. It includes features like bookmarking queries, creating saved dashboards, producing charts and widgets from SQL queries, exporting data, and using Django's authentication system. Additionally, it mentions documentation, screenshots, and alternative tools, all typical of a web application."
https://github.com/nisiotis/dideman,nisiotis_dideman_master.txt,yes,"The README describes 'dideman' as a web application built using Python Django framework, which is specifically designed for web development. It mentions a backend for administrative personnel and a frontend for teachers, indicating a user-facing aspect, typical of web applications. It also requires a web server, database, and various libraries commonly used in web development. Additionally, it references a new version with an updated interface, further indicating ongoing web application development."
https://github.com/yoctoproject/poky,yoctoproject_poky_master.txt,no,"The file name README.poky.md does not provide enough information to determine if it belongs to a web application or not. It could be related to the Yocto Project (Poky), a Linux distribution build tool, rather than a web application."
https://github.com/Azure-Samples/azure-python-labs,Azure-Samples_azure-python-labs_master.txt,no,"The README file provides information and labs on how to build Python applications with Azure services and tools. It focuses on demonstrating various Azure functionalities and integrations with Python, rather than being a standalone web application."
https://github.com/ThijsRay/TU-Delft-CTF-2022,ThijsRay_TU-Delft-CTF-2022_master.txt,no,"This README seems to describe a set of challenges for a CTF competition, it is not a web application."
https://github.com/amiransht/sehat-terus,amiransht_sehat-terus_master.txt,yes,"The README file describes the development of a web application called SehatTerus, which is aimed at providing COVID-19 information and digital tracking of patients. It mentions various modules such as Authentication, Profile, Settings, Summary Page, Data Entry, Nakes Page, About Website, FAQ, Blog, and base components like Navbar and Footer. It also outlines different user roles and functionalities for each role. The presence of a link to the deployed web application further confirms that it is indeed a web application."
https://github.com/blabla1337/skf-flask,blabla1337_skf-flask_master.txt,yes,"The README file clearly mentions the Security Knowledge Framework as a guide-system for developers to develop web applications secure by design from the start. It discusses the security of web applications and the risks involved, indicating that it is related to web application development."
https://github.com/steviewong/Team-Project-7,steviewong_Team-Project-7_master.txt,no,The README file name 'Team-Project-7' does not provide enough information to determine if it is a web application or not. We would need more detailed information about the project itself to make that determination.
https://github.com/Diluka/nas-tools-unlock,Diluka_nas-tools-unlock_master.txt,yes,"The README file contains information about a NAS media library management tool that can be accessed via API, Docker, local installation instructions, and executable files. It also includes links to GitHub repositories, Docker Hub, Telegram channel, and a Wiki page. These are typical components found in a web application README."
https://github.com/meyruiz/MACS-Soen6011summer2023,meyruiz_MACS-Soen6011summer2023_master.txt,yes,"The README clearly outlines the development of a web application for a career service platform. It describes features such as user registration, job posting and management, profile management, tracking system, admin management, data security, and privacy. Additionally, it mentions front-end technologies like React, JavaScript, NodeJS, and back-end technologies like Flask, Flask-login, and MongoDB. The instructions for setting up the application also indicate that it is meant to be hosted on a server for testing and development purposes."
https://github.com/razac-elda/PlatypOS-Airlines,razac-elda_PlatypOS-Airlines_master.txt,yes,"The README mentions a 'website', 'Flask framework', 'Bootstrap framework', 'functionality related to flight booking', 'PostgreSQL database', 'web server', and setup instructions for running the application, all typical components and characteristics of a web application."
https://github.com/Jamie-/ctf-flag-tracker,Jamie-_ctf-flag-tracker_master.txt,yes,"The README file describes a CTF flag tracker web application designed for long-term tracking of multiple events, teams, and permissions. It provides instructions for installation using Docker with Nginx as a reverse proxy. It also includes details on creating an initial admin user and running behind an Nginx proxy server. Additionally, it mentions being designed for a specific organization, the University of Southampton Cyber Security Society."
https://github.com/pbaesse/dados-livres,pbaesse_dados-livres_master.txt,yes,"The README file describes a web application called 'Dados Livres - Plataforma de Dados Abertos' that allows sharing and collaboration on identifying open data sources and applications that use this information. It provides installation instructions, configuration steps, and how to run the application locally. It also includes a list of authors, licensing information, and contact details. The presence of information about accessing the application via a localhost address and mentioning Flask commands indicates that this is a web application."
https://github.com/joshand/adaptive-policy-sync,joshand_adaptive-policy-sync_master.txt,yes,"The README file provides detailed instructions on setting up, configuring, and using an application called 'adaptive-policy-sync'. It includes information on compatibility with Cisco ISE and Cisco Meraki, setting up the environment using Docker or running locally, configuring Adaptive Policy Sync using both UI and API methods, troubleshooting tips, and database access instructions. The content suggests that 'adaptive-policy-sync' is a web application for synchronizing policies between Cisco ISE and Cisco Meraki."
https://github.com/clarissa-ai/clarissa-web-backend,clarissa-ai_clarissa-web-backend_master.txt,yes,"The README mentions an admin dashboard, which implies a web interface. Additionally, Python and Flask are commonly used for web development, suggesting that this is likely a web application."
https://github.com/zbatscha/tangelo,zbatscha_tangelo_master.txt,yes,"The README file provides detailed instructions on how to install, set up environment variables, populate the database, run the application server, and automate content updates. It also includes links to additional documents such as the project overview, user's guide, and programmer's guide. These characteristics are indicative of a web application."
https://github.com/ncsa/bhr-site,ncsa_bhr-site_master.txt,yes,"The README file describes a web application called BHR Site/API endpoint. It provides information on how BHR clients interact with the system, configuration details, development instructions using Docker, and related projects. It mentions setting up settings_local.py, configuring Apache, using docker-compose for development, and provides links to related projects."
https://github.com/blavian/FireMoney,blavian_FireMoney_master.txt,yes,"The README file describes a web application called Fire Money, which is a personal finance app built with technologies like React, Redux, Python, and Flask. It provides instructions on how to clone the repository, install dependencies, set up the environment, and run the application. The presence of features like user login, transactions, and a wiki also indicate that it is a web application."
https://github.com/vialivre/flask-freeradius-admin,vialivre_flask-freeradius-admin_master.txt,yes,"This README file describes a web application called Flask-FreeRadius-Admin, which is a visual editor for the FreeRadius server tables. It provides instructions on how to install and use the application, including setting up Docker, PostgreSQL database, configuring FreeRadius, setting up environment variables, and running the Flask app. Additionally, it includes information on accessing the application shell, standalone use instructions, setting up a systemd service, and accessing the web interface. The README also provides details on modifying configuration files, SQLite to PostgreSQL migration, granting database permissions, and restarting services. Overall, it clearly explains the steps required to set up and use the web application."
https://github.com/Sanqui/prekapavac,Sanqui_prekapavac_master.txt,yes,"The README file describes a web application called Překapávač which is used for collaborative translation of terminology. It provides instructions on setting up a development version, including cloning the GitHub repository, setting up the database, and starting the server. It mentions using Flask and SQLAlchemy, and provides a live version link. Therefore, it qualifies as a web application."
https://github.com/profjsb/python-seminar,profjsb_python-seminar_master.txt,yes,"The README describes a graduate seminar course focused on learning various aspects of Python for data science, including web frameworks, machine learning, and parallelism. It mentions building a working codebase and covers topics like web frameworks, RESTful APIs, and Flask, indicating web application development."
https://github.com/Random-Coders/Opportunity-Dashboard,Random-Coders_Opportunity-Dashboard_master.txt,yes,"The README file provides instructions on how to set up and run the web application using virtualenv, make command, and pip. It also mentions the use of gunicorn for running the application, which is commonly used for hosting web applications. Additionally, it references a license file and external tools like pystarter, indicating that it is indeed related to a web application."
https://github.com/Jubintgh/CoinPal,Jubintgh_CoinPal_master.txt,yes,"The README describes a web application called Coin Pal, which facilitates the transfer of crypto between users without the need for wallet hash, similar to Venmo. The application has a front-end built with React, follows Redux architecture, a backend developed using Flask and PostgresSQL, and APIs designed around REST principles. It includes features like user authentication, user wallet management, crypto transactions, and friend request functionalities. The technologies used such as Flask, React, and PostgreSQL are common in web application development."
https://github.com/jan-janssen/gmailsorter,jan-janssen_gmailsorter_master.txt,yes,"The README file describes 'Gmailsorter' as a server-side application that integrates with Google Mail to filter and sort emails based on similarity. It mentions features, motivation, a web service launch, documentation links, configuration options, and support. Additionally, it provides licensing information. The presence of a web service, documentation links, and configuration options indicate that it is a web application."
https://github.com/asrashley/dash-live,asrashley_dash-live_master.txt,yes,"The README file describes a Python application that provides an endpoint for serving multiple MPEG DASH manifests. It discusses installation steps, running the server, adding user accounts, validating DASH streams, migrating from a Python 2 version, testing, and licensing information. The application serves a specific purpose of testing live DASH streams using non-live, rights-cleared material, making it a web application."
https://github.com/scp-cs/translatordb_web,scp-cs_translatordb_web_master.txt,yes,"The README file provides detailed information about the SCUTTLE Translator Directory System, which is a web application. It includes features, installation instructions both manually and using Docker, and mentions using classic credentials or Discord OAuth for login. It also contains a configuration file, deployment instructions, and references to DockerHub for a prebuilt container image."
https://github.com/qwlake/knu-festival,qwlake_knu-festival_master.txt,yes,"The README file describes 'KNU Festival - 머동머동' website, created by a group of students and developers for a university festival. It includes information about the apps available on the site, such as '분실물 게시판', '술 친구 게시판', '푸드트럭', '강대총학 문의 게시판', and '인덱스'. Additionally, it provides information about the environments required to run the site (Windows or iOS, Python 3.6+, Django 2.1) and quick start commands. These details indicate that it is a web application."
https://github.com/0xdbff/tuxTech,0xdbff_tuxTech_master.txt,yes,"This README file describes an online store web application with a modern website design, scalability, modularity, efficiency, and security measures. It mentions software technologies like Redis, PostgreSQL, Nginx, and Gunicorn, commonly used in web applications. Additionally, it talks about licensing under the AGPLv3, indicating it is a web application being hosted on a server."
https://github.com/imr-framework/vs-tabletop,imr-framework_vs-tabletop_master.txt,yes,"The README file contains instructions on how to install and run the web application, as well as details about the audience, features, and games provided by the 'Virtual Scanner Tabletop Web Games' application. It also includes information on troubleshooting, setup methods, contributing guidelines, references, and screenshots of the application interface. Overall, the content clearly indicates that this is a web application focused on educational games about MRI."
https://github.com/ekalimatis/RMS,ekalimatis_RMS_master.txt,yes,"The README describes a project focused on creating a Requirements Management System, which is a type of web application used for managing requirements for software projects. It includes features like creating/editing requirements, storing requirements in a structured format, version control, avoiding duplicates, customizable attributes, search functionality, user permissions, workflow management, and notifications. These functionalities are typical of a web application aimed at managing requirements online."
https://github.com/mbrsagor/covid19,mbrsagor_covid19_master.txt,yes,"The README file contains instructions for setting up a hospital management app using Django framework, PostgreSQL database, and Python. It includes steps for installing dependencies, creating a database, setting up a Django server, and running the application. This README file is for a web application."
https://github.com/allspeak/api.allspeak.eu,allspeak_api.allspeak.eu_master.txt,no,"This README file seems to contain API documentation, which suggests that the repository might be related to an API service or library, but it doesn't directly indicate that it is a standalone web application. Hence, the classification is 'no'."
https://github.com/yashgo0018/django-ecommerce,yashgo0018_django-ecommerce_master.txt,yes,"The README file describes a Django web application for an e-commerce website using Django Rest Framework and Django web framework. It provides detailed instructions on how to install the application, including cloning the repo, setting up virtual environment, installing dependencies, making migrations, creating a superuser, changing settings, and running the development server. It also mentions creating products from the Django admin panel."
https://github.com/caffeinehit/django-oauth2-provider,caffeinehit_django-oauth2-provider_master.txt,yes,"The README file mentions that django-oauth2 is a Django application that provides customizable OAuth2 authentication for Django projects, indicating that it is indeed a web application."
https://github.com/stvnmbt/pasok,stvnmbt_pasok_master.txt,yes,"The README describes a system called PASOK, which is a student attendance system for a specific institution. It provides instructions for cloning the repository, installing required packages, initializing the database, and running the system, indicating that it is a web application."
https://github.com/felixrichards/Project-Web-App,felixrichards_Project-Web-App_master.txt,---,Empty README
https://github.com/route4me/route4me-curl,route4me_route4me-curl_master.txt,yes,"The README file clearly discusses the capabilities and usage of the Route4Me SDK and API, which allows users to interact with the Route4Me system for optimizing driving routes. It explains how the API/SDK integration works, the requirements for API key, rate limits, recommended architecture, optimization capabilities, custom algorithms, reselling restrictions, notification features, operating system compatibility, server requirements, and the need for programmers to integrate the SDK. These are all characteristics of a web application."
https://github.com/Volontaria/API-Volontaria,Volontaria_API-Volontaria_master.txt,yes,"The README mentions an API for managing volunteers in an organisation, which indicates that this is a web application. Additionally, there is a reference to documentation for getting started with Volontaria in the '/docs/getting_started' directory, further supporting that this is a web application."
https://github.com/boxine/bx_django_utils,boxine_bx_django_utils_master.txt,yes,"The README file provides information about a Django utility package called bx_django_utils. It includes details about installation, supported Django versions, existing utilities, quickstart guide, license information, developing instructions, and links to PyPi. This clearly aligns with the characteristics of a web application."
https://github.com/NamelessTek/Homada-Service-Bot,NamelessTek_Homada-Service-Bot_master.txt,yes,"The README mentions a Flask app that uses Twilio API to create a WhatsApp Bot and manage Airbnb bookings, indicating that it is a web application designed to interact with users on platforms like WhatsApp and manage bookings."
https://github.com/urfonline/api,urfonline_api_master.txt,yes,"The README file describes a web application called URF website which makes use of Django and Graphene technologies, indicating that it is indeed a web application."
https://github.com/webmalc/nativecards-server,webmalc_nativecards-server_master.txt,yes,"The README file describes a backend server for the Nativecards app, indicating that it is a web application. Additionally, it mentions URLs related to the app's functionality, further supporting the idea that it is a web application."
https://github.com/sparcians/map,sparcians_map_master.txt,no,"The README describes a framework designed for modeling and simulation of complex hardware for performance analysis and hardware design. It provides classes, tools, and flows for this purpose. The framework is divided into Sparta (a set of C++ classes) and Helios (a set of python tools for visualization and analysis). It is not a web application, but a specialized tool for hardware modeling and simulation."
https://github.com/aws-kr-tnc/moving-to-serverless-renew,aws-kr-tnc_moving-to-serverless-renew_master.txt,yes,"The README file mentions the migration of a server-based Python Flask web application to a Serverless architecture application using AWS Chalice micro-framework. It covers various AWS services like Cloud9, S3, API Gateway, Lambda, Cognito, DynamoDB, X-Ray, Parameter Store, and includes hands-on labs and workshop presentations. It clearly indicates the focus on a web application and its transition to a Serverless architecture."
https://github.com/weni-ai/bothub-engine,weni-ai_bothub-engine_master.txt,no,"The README file provided contains information about a project called Bothub, which seems to be related to a Python project involving development, testing, and deployment processes. It includes details about Docker, requirements, commands, setup guides, deployment options, environment variables, and more. This README does not describe a web application itself, but rather the backend setup and configuration for a specific project."
https://github.com/weitblicker/weitblick-website,weitblicker_weitblick-website_master.txt,yes,"The README file provides detailed instructions on how to install, configure, and run the web application using technologies such as Django, Python, Elasticsearch, and Docker. It also includes steps for setting up the database, starting the server, configuring Microsoft login, managing Django translations, and troubleshooting common errors. These aspects are indicative of a web application."
https://github.com/ilseh/Oppleo,ilseh_Oppleo_master.txt,yes,"The README file describes the Oppleo software package, which extends a basic SmartEVSE car charger by adding functionality like RFID tags, buzzer, LED, web front with authentication, kWh meter logging, off-peak charging, and Excel/PDF reports. It is built using Python3/Flask and runs on a Raspberry Pi. The README contains detailed installation instructions, dependencies on Raspberry Pi specific packages, hardware requirements, BOM, specific Raspberry Pi versions supported, and references for Raspberry Pi GPIO operations."
https://github.com/kanedata/find-that-charity,kanedata_find-that-charity_main.txt,yes,"The README file provides detailed instructions on setting up the web application 'Find that charity' using Elasticsearch, Django, and Dokku. It mentions functionalities such as importing data from various sources, Elasticsearch index, reconciliation API, CSV uploads, and HTML pages for searching charities. It also includes installation steps, database setup, API endpoints, and future development plans. Overall, it clearly describes the features and structure of a web application."
https://github.com/open-zaak/open-zaak,open-zaak_open-zaak_master.txt,yes,"The README file describes a web application called Open Zaak, which provides production-ready APIs for Zaakgericht Werken (ZGW), a process used by Dutch municipalities and governmental bodies. It details the different APIs included, the architecture, implementation details, deployment using Docker containers, and links to documentation and Docker Hub. The README also mentions the involvement of Maykin Media B.V. and Dimpact in developing the APIs. Overall, it clearly indicates that this is a web application."
https://github.com/academic-resources/stared-repos,academic-resources_stared-repos_master.txt,---,Empty README
https://github.com/kareem207/GestureSenseAI-Interactive-Human-Body-Language-Analysis-Platform,kareem207_GestureSenseAI-Interactive-Human-Body-Language-Analysis-Platform_master.txt,yes,"The provided README file is for a Create React App, which is a tool used to create web applications using React. The README contains information about available scripts, running the app in development mode, building the app for production, deployment options, and more. This clearly indicates that it belongs to a web application."
https://github.com/vallem13/GlobalGrub,vallem13_GlobalGrub_master.txt,yes,"The README file describes a web application called GlobalGrub, which is a spinoff of UberEats website. It details features such as full CRUD operations on Restaurants, Reviews, Menu Items, and Shopping Cart, along with user authentication functionalities like sign up, log in, and log out. Technologies like Python, JavaScript, HTML, CSS, React, Redux, Flask, Postgres, and SQLAlchemy are used. Instructions for deployment on Render.com are also provided, including configuring start and build commands, setting up environment variables, and deploying the application."
https://github.com/MRCIEU/MELODI-Presto,MRCIEU_MELODI-Presto_master.txt,yes,"The provided README file describes a web application called MELODI Presto, which is a tool used to explore semantic triples derived from biomedical literature. It discusses the API and application usage, creation details, filtering of data, use of Elasticsearch, enrichment analysis, and performance metrics. Additionally, it includes limitations and notes about the tool. The presence of API endpoints, usage instructions, data filtering, data enrichment, and performance testing all indicate that this is a web application."
https://github.com/puibtx/131-Team10,puibtx_131-Team10_master.txt,yes,"The README file describes the development of a blogging web application project with features like login, logout, create new account, user home page, post pictures/text, upload profile picture, delete posts, follow users, display other users' profiles, search users, and more. It also mentions the use of Flask as the main programming language, SQLAlchemy for database integration, and instructions for installation and usage of the web application."
https://github.com/OpenDataServices/org-ids,OpenDataServices_org-ids_master.txt,yes,"The README file describes the creation of a web application called org-id.guide, which involves maintaining an organization identifier list, developing a methodology for updating the list, providing lookup tools, and guidance on choosing the best identifiers to use. Additionally, it mentions a List Finder Django App with installation steps, indicating the presence of a web application."
https://github.com/D4-project/d4-core,D4-project_d4-core_master.txt,yes,"The README file describes a software project with components such as D4 core client and D4 core server, which are used to create and manage a sensor network. It includes installation instructions, usage examples, and screenshots of the server dashboard and management interfaces. The project involves client-server architecture, networking functionalities, and management capabilities, indicating that it is a web application."
https://github.com/OfficeDev/office-content,OfficeDev_office-content_master.txt,no,"This README file provides information on how to contribute to the Office developer documentation repository, including ways to contribute, repository organization, guidelines for contributing, and information about the Contribution License Agreement. It does not describe a web application but rather a documentation repository for developers."
https://github.com/nnseva/django-jsoneditor,nnseva_django-jsoneditor_master.txt,yes,"The README file provides detailed instructions on how to install, configure, customize, and use Django-JSONEditor, which is an online structured JSON input widget for Django. It includes information on installation, configuration settings, usage in Admin classes, replacing original JSONField implementations, custom JSONEditor initialization, custom Ace initialization, JSONschema usage, custom styling, and custom encoders. It also references external sources like the original JSONEditor JavaScript code repository and instructions for giving bounties on bountysource.com."
https://github.com/CIS192/website,CIS192_website_master.txt,yes,"The README file describes a web application project for a CIS 192 Course Website built using Gatsby and React. It includes instructions for installation, starting the development server, and deploying to GitHub Pages. The project features a notes section with markdown support, syntax highlighting, and LaTeX rendering, indicating it is indeed a web application."
https://github.com/GeneralNotability/bullseye,GeneralNotability_bullseye_master.txt,yes,"The README file provides instructions on how to set up and run a web application using Django framework. It includes steps like cloning a GitHub repository, setting up a Python virtual environment, installing dependencies, configuring settings, downloading a GeoLite database, and running the Django development server."
https://github.com/teknologkoren/flasquelistan,teknologkoren_flasquelistan_master.txt,yes,"This README contains instructions for setting up a development environment, initializing the application, creating a database, adding mock data, creating admin user, running a development server, and testing the application using Pytest. It provides information about using Flask, pip, and pip-tools for managing dependencies. Additionally, it mentions about configuring Flask, running tests with coverage measurement and parallel execution, which are common practices in web application development."
https://github.com/jardiacaj/finem_imperii,jardiacaj_finem_imperii_master.txt,yes,"The README file describes a web-based role-strategy multiplayer game called Finem Imperii hosted at http://fi.joanardiaca.net/. It provides information about the game, its concept, how to contribute, documentation index, server setup guide, license, and UOC deliveries. The game involves players in a persistent world set in the late middle ages, emphasizing cooperation and various gameplay possibilities. Additionally, it includes links to documentation, contributing guidelines, and a license."
https://github.com/uktrade/selling-online-overseas,uktrade_selling-online-overseas_master.txt,yes,"The README file provides detailed instructions on how to install the web application locally, set up environment variables, run setup scripts, run the local server, run tests, and other utilities related to the web application. It mentions using Django as the main app, setting up a local database, running commands in the terminal, and accessing the application via a local server. Additionally, it includes information on enabling Single Sign-On, rebuilding the project, and legacy documentation for reference, all of which are common practices for web applications."
https://github.com/django-oscar/django-oscar,django-oscar_django-oscar_master.txt,yes,"The README file provides information about an e-commerce framework called Oscar designed for Django, which is used for building domain-driven sites. It includes details about the core functionality, customization options, extensions, supported versions, and contributions to the project. It also contains links to the official homepage, documentation, and related resources, as well as information on how to set up the sandbox site and available extensions. The content clearly indicates that Oscar is a web application for e-commerce purposes."
https://github.com/ziauldin123/django-ecommerce-B2B2C,ziauldin123_django-ecommerce-B2B2C_master.txt,yes,"The README file describes a Django E-commerce B2B2C platform hub website designed for retailers and wholesalers. It mentions key features of the platform, project contribution guidelines, and encourages involvement from developers, vendors, and buyers. The README also includes images showcasing the platform's interface. These elements align with a typical web application project, confirming that it belongs to a web application."
https://github.com/ouStanleyy/instagram-clone,ouStanleyy_instagram-clone_master.txt,yes,"The README file describes a project called Instantgram, which is clearly identified as an Instagram clone. It discusses features similar to Instagram, such as sharing posts, interacting with followers, editing profiles, sending messages, and more. The project utilizes various technologies typically used in web applications, such as HTML, CSS, JavaScript, Python, Flask, Express.js, React, Node.js, SQLite, and more. It also provides links to API documentation and a live link, showcasing a web application interface."
https://github.com/mazassumnida/mazassumnida,mazassumnida_mazassumnida_master.txt,yes,"The README file provides installation instructions, usage details, and showcases screenshots of the web application. It also includes links to the application's GitHub repository and live demo. The content suggests that 'Project Mazassumnida' is a web application designed to enhance the appearance of BOJ profiles on GitHub."
https://github.com/google/timesketch,google_timesketch_master.txt,yes,"The README file contains information about Timesketch, which is described as an open-source tool for collaborative forensic timeline analysis. It provides instructions for installation, adding timelines, and using Timesketch. Additionally, it includes community and contributing sections. The presence of installation guides, user guides, and community resources indicates that this is a web application, specifically geared towards forensic timeline analysis."
https://github.com/gorse-io/gitrec,gorse-io_gitrec_master.txt,yes,"The README file provides instructions for setting up and running the GitRec web application. It includes details on cloning the repository, creating environment variables, generating access tokens, setting up Docker Compose, importing SQL data, and accessing the application through specific URLs. Additionally, it mentions browser extensions and acknowledgments, typical of a web application project."
https://github.com/sachsom95/Dublin_bus_official,sachsom95_Dublin_bus_official_master.txt,yes,"The README file describes a web application called 'Dublin Bus Project' with features such as bus journey predictions, leap card balance checking, trip sharing, favorite locations saving, tourist destinations, Covid data display, admin page, Android app support, latest tweets updates, and provides instructions on running the application locally. It mentions technologies like Django, Python, conda, and Google Maps API, as well as contains images and GIFs showcasing the app's functionality."
https://github.com/yezyilomo/django-restql,yezyilomo_django-restql_master.txt,no,"The content provided in the README file is about a Python library called Django RESTQL, which is used to enhance the capabilities of Django REST Framework APIs by enabling GraphQL-like queries. It is not a standalone web application, but rather a tool to be integrated into a web application built with Django REST Framework."
https://github.com/bonn-activity-maps/bam_annotation_tool,bonn-activity-maps_bam_annotation_tool_de-dockerized.txt,yes,"The README file describes a web application for annotating datasets, with features like user management, multiple views, annotations, editing tools, options panel, shortcuts, and more. It mentions login functionality, real-time notifications, visualization of actions, and supports interactions with external datasets like Bonn Activity Maps and Posetrack. The tool provides a user interface for creating, modifying, and deleting annotations, making it clear that it is a web application."
https://github.com/bear-rsg/experiences-of-landscape-workers,bear-rsg_experiences-of-landscape-workers_master.txt,yes,"The README clearly states that this project is a Progressive Web App (PWA) developed using Django, Django REST Framework, and PostgreSQL. It outlines the goal of the project, prerequisites for running it, installation instructions, and the technologies it is built with. Hence, it qualifies as a web application."
https://github.com/inducer/relate,inducer_relate_master.txt,yes,"The README provides detailed information about RELATE, describing it as a web-based courseware package. It mentions features like easy content creation, flexible rules for participation, access, and grading, versioning of content with git integration, multiple course hosting, code questions with automatic grading, statistics/analytics of student answers, facilitation of live quizzes, instant messaging functionality, and provides links for documentation, source code, installation guide, and license information. These characteristics are indicative of a web application designed for educational purposes."
https://github.com/WISVCH/dienst2,WISVCH_dienst2_master.txt,yes,"The README file provides detailed instructions on how to develop, build, and deploy the Dienst2 application using technologies like Docker, PostgreSQL, PyCharm, and Django. It also includes information on translation files, production deployment with Kubernetes, setting up Google Service Account for API access, and testing the IAP (Identity-Aware Proxy) locally. These are all typical features and requirements of a web application."
https://github.com/GrahamDumpleton/mod_wsgi,GrahamDumpleton_mod_wsgi_master.txt,yes,"The README file describes mod_wsgi, an Apache module that implements a WSGI compliant interface for hosting Python based web applications on top of the Apache web server. It provides detailed instructions for hosting Python web applications, including installation methods, system requirements, integration with Apache, usage with Django, and connecting to Apache installation."
https://github.com/usgs/shakecast,usgs_shakecast_master.txt,yes,"The README file mentions ShakeCast, which is described as a fully automated, open-source system for delivering specific ShakeMap products to users. The README also includes links to user and developer documentation, indicating that this is a web application designed for users to access via a web interface."
https://github.com/museum4punkt0/Ping-Backend,museum4punkt0_Ping-Backend_master.txt,yes,"The README file describes a backend application for the 'Ping! Die Museumsapp' web application. It includes information about the technology stack, installation steps, testing, and Docker configurations specific to a web application backend. Additionally, it mentions running the project locally and provides instructions for setting up environment variables. The project is associated with a GitHub repository and funded by governmental organizations for cultural and media affairs. Therefore, it meets the criteria of being a web application."
https://github.com/cedricbonhomme/Grenouille,cedricbonhomme_Grenouille_master.txt,yes,"The README file describes a web application called Grenouille which is an online service for weather data. It mentions using Flask for the web application, provides deployment instructions for Heroku and traditional servers, and includes examples of web services such as sending and getting measures through APIs."
https://github.com/inveniosoftware/invenio-files-rest,inveniosoftware_invenio-files-rest_master.txt,yes,"The README file is describing a web application called Invenio-Files-REST. It provides information about its features, documentation link, and licensing details. Additionally, it mentions secure REST APIs, customizable access control, and file storage capabilities, indicating that it is a web application meant for file storage and retrieval."
https://github.com/lkhq/laniakea,lkhq_laniakea_master.txt,yes,"The README describes Laniakea as a software suite to manage Debian derivatives, providing tools to maintain an APT archive, perform QA, autobuild packages, and includes web applications to view archive details. It mentions a web interface, development badges, and the intention to improve documentation for contributors. Additionally, it emphasizes the use of web applications as part of managing the software."
https://github.com/rownd/docs,rownd_docs_master.txt,yes,"The README file describes the content and configuration for a documentation website hosted at docs.dev.rownd.io. It includes instructions for development using Mintlify CLI to preview documentation changes locally. This indicates that it is related to a web application, specifically a documentation website."
https://github.com/MarcoCat/HappyBrew,MarcoCat_HappyBrew_master.txt,yes,"The README file provides instructions on how to run the application using Python and accessing it through a web browser, indicating that it is a web application."
https://github.com/tyler-tor/Instagram-Group-Project,tyler-tor_Instagram-Group-Project_master.txt,yes,"The README file describes an Instagram Clone Group Project which is a web application that allows users to socialize through posts and comments. It mentions technologies used such as Python, JavaScript, React, and Flask for web development. It also provides steps on how to get started, screenshots of usage including login, signup, user profile, adding a post, viewing posts, explore page, editing a caption, and following users. All these aspects align with a web application."
https://github.com/PBP-G20Project/pusat-pengaduan,PBP-G20Project_pusat-pengaduan_master.txt,yes,"The provided README file describes a web application called 'Pusat Pengaduan' which allows users to report corruption cases. It includes details about the application's purpose, features, roles (Guest, User, Admin), modules, and user roles. Additionally, it provides a link to access the application online, mentions of a deployment badge indicating continuous integration, and a description of the story behind the application. Overall, it clearly outlines the functionality and structure of a web application."
https://github.com/langgenius/dify,langgenius_dify_master.txt,yes,"The README file contains information about a web application called Dify, including features, installation instructions, configuration details, community support, contributions, translations, and licensing. It discusses cloud services, deployment options such as Docker and Helm, system requirements, and includes links to the official website, documentation, and FAQs. Additionally, it provides details about the application's features, integrations with AI models, and provides badges for GitHub, Discord, Twitter, and Docker Hub."
https://github.com/Dracks/mr-scrooge,Dracks_mr-scrooge_master.txt,yes,"The README file contains information about the web application Mr Scrooge, including details on how to run the application using Docker, supported file formats, demo instructions, screenshots of the Minimum Viable Product (MVP), and guidelines on how to contribute. Additionally, it provides links to the Docker image on Docker Hub, details on how to run the server and view parts of the application, and acknowledgments to the icon source. Overall, the content suggests that Mr Scrooge is a web application."
https://github.com/jameshunter12/james-fastpage,jameshunter12_james-fastpage_master.txt,yes,"The README mentions 'My Blog' powered by fastpages, provides links to resources on how to write blogs using Jupyter and Markdown, and includes instructions on setting up the repository for writing content, all of which are common features of web applications for blogging. Additionally, the provided link leads to a webpage with blog content, further confirming that this is a web application for hosting a blog."
https://github.com/cortictechnology/cep,cortictechnology_cep_master.txt,no,"The README provides detailed information about CEP, which is a software platform designed for AI projects and runs on Raspberry Pi devices. It includes components like CAIT for visual programming and CURT for handling AI computations. While it involves programming and hardware setup, it is not a web application but a software platform for AI development and deployment."
https://github.com/aims-group/publication-site,aims-group_publication-site_master.txt,yes,"The README describes Publication Hub as a publication management site for groups and organizations, indicating that it is a web application used for managing publications. Additionally, it provides a link to the documentation hosted on a website, further emphasizing its web-based nature."
https://github.com/mrf345/FQM,mrf345_FQM_master.txt,yes,"The provided README file contains information about a web application called Free Queue Manager (FQM). It describes features, setup instructions, database migration steps, and documentation related to a queue management system built with Python Flask, Bootstrap, and jQuery. It mentions Docker setup for production, standard python setup, and executable downloads. Additionally, it includes links to user guides, localization guides, settings customization, and references to GitHub and SourceForge for downloads. Therefore, based on the content provided, it is clear that this is a web application."
https://github.com/matchd-ch/matchd-backend,matchd-ch_matchd-backend_master.txt,yes,"The README file provides detailed instructions on how to set up and run the Matchd web application backend, including information on prerequisites, setup steps, environment variables, database models, API endpoints like GraphQL, admin GUI access, test data seeding, email setup, project details, development workflow, and contribution guidelines. The file also includes links to relevant resources and repositories."
https://github.com/apache/superset,apache_superset_master.txt,yes,"The README file describes Superset as a modern, enterprise-ready business intelligence web application. It provides features like a no-code interface for building charts, a web-based SQL Editor for advanced querying, support for various databases, and beautiful visualizations. Additionally, it includes installation and configuration instructions, information on supported databases, contributor guides, community resources, and documentation. The file also contains links to join Slack, StackOverflow, and mailing lists related to Apache Superset."
https://github.com/wagtail/wagtail-autocomplete,wagtail_wagtail-autocomplete_master.txt,yes,"The README file describes Wagtail Autocomplete as an edit handler for the Wagtail content editor allowing autocomplete selection of Pages, Snippets, or other models. It also mentions that the widget is written in React and can be used outside the Wagtail admin. Additionally, it includes features, information on how to integrate with Wagtail, details on documentation, and contributors. All these aspects are indicative of a web application."
https://github.com/mcoughlin/kp84,mcoughlin_kp84_master.txt,no,"The README file provides detailed information about scripts and processes related to astronomical observations and data reduction. It involves scripts for observation submission, data reduction, source extraction, photometric reduction, post-processing examination, and database updates. While it is related to scientific data processing, it is not a web application but rather a set of scripts for handling astronomical data."
https://github.com/MagnumNight/PulsePoint,MagnumNight_PulsePoint_main.txt,yes,"The README provides detailed instructions on how to set up and run the web application, including cloning the repository, setting up a virtual environment, installing dependencies, securing the application, setting up the database, and running the development server. It also describes the features of the web application such as mood tracking, community platform, and resources. Additionally, it mentions the technology stack used (Python, Django) which are common for web applications."
https://github.com/keshao728/Ingenius,keshao728_Ingenius_master.txt,yes,"The provided README file describes a web application called Ingenius, which is a site for providing annotations and interpretations to song lyrics. It includes a live site link, information about technologies used (Flask, React, Redux, SQLite, PostgreSQL), features, a section on running the application locally, and links to project contributors' GitHub profiles. Additionally, it contains images and gifs demonstrating the application's functionality."
https://github.com/therealtoma/EUResearchHub,therealtoma_EUResearchHub_master.txt,yes,"The README file describes a web application called EUResearchHub designed for internal evaluation of research projects for funding in the European Union. It outlines features such as project creation, different project states, evaluator functions, version history tracking, messaging system, and more. Additionally, it includes links to database design documentation and detailed project documentation. The presence of features specific to a web application and the overall context indicate that this is indeed a web application."