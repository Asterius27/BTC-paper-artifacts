import python
import semmle.python.dataflow.new.DataFlow

// When the developer uses a custom session engine he has to implement all of the defenses/mitigations that session engines offered by django have by default.
// For example: Refreshing session id after login, not accepting a session id generated by the user and not using it, not using predictable session ids...
// TODO there might be other ways to change the session engine (not sure because they are constants, so the only way to set them should be in the settings.py file (which is what this query checks))
where exists(DataFlow::ExprNode source, DataFlow::ExprNode sink | 
    source.asExpr().(StrConst).getText().prefix(33) != "django.contrib.sessions.backends."
    and exists(AssignStmt asgn, Name name | 
        name.getId() = "SESSION_ENGINE"
        and asgn.getATarget() = name
        and exists(asgn.getLocation().getFile().getRelativePath())
        and asgn.getValue() = sink.asExpr()
    )
    and DataFlow::localFlow(source, sink))
select "Using a custom session engine"
