"""
Django settings for DjangoApp project.

Generated by 'django-admin startproject' using Django 4.2.4.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""

from pathlib import Path
# User: paolo
# Password: password

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-7jbr66(3gcuj=%p(^9r_8)-p)_4rhcjzs^xq^1p_f5_e3lxw@d'
SECRET_KEY_FALLBACKS = ["secret-key", "older_secret_key"]

# Password hashing
PASSWORD_HASHERS = [
    "hashers.MyArgon2PasswordHasher",
    "django.contrib.auth.hashers.Argon2PasswordHasher",
    "django.contrib.auth.hashers.PBKDF2PasswordHasher",
    "django.contrib.auth.hashers.PBKDF2SHA1PasswordHasher",
    "django.contrib.auth.hashers.BCryptSHA256PasswordHasher",
    "django.contrib.auth.hashers.ScryptPasswordHasher",
]

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []

# Session cookie accessible via javascript
a = False
b = 5
SESSION_COOKIE_HTTPONLY = a # default is true

# Session cookie expires, can also be set using request.session.set_expiry()
SESSION_COOKIE_AGE = 50 # in seconds, default is 1209600 (2 weeks)
SESSION_EXPIRE_AT_BROWSER_CLOSE = True # overwrites session_cookie_age, deafult is false. When set to true the session expires when the user closes their browser

# Session cookie domain attribute
SESSION_COOKIE_DOMAIN = ".example.com" # default is None

# Session cookie name
SESSION_COOKIE_NAME = "__Secure-session" # default is 'sessionid'

# Session cookie secure attribute
SESSION_COOKIE_SECURE = True # default is false

# Set session type
SESSION_ENGINE = 'django.contrib.sessions.backends.signed_cookies' # sets session to client side (the session data will be signed using the secret key)
# default is 'django.contrib.sessions.backends.db' that corresponds to server side sessions (the cookie will only store the session id)
# session id is randomly generated by default, check if it can be changed by the developer

# CSRF (Samesite attribute)
SESSION_COOKIE_SAMESITE = 'None' # default is 'Lax', can also be set to 'Strict', 'None' or False

# Session serializer
SESSION_SERIALIZER = 'django.contrib.sessions.serializers.PickleSerializer' # Default is 'django.contrib.sessions.serializers.JSONSerializer' (should not be changed, using a custom one is not recommended and the pickle serializer is unsafe)

# HSTS
SECURE_HSTS_SECONDS = 30 # default is 0. If set to a non-zero integer value, the SecurityMiddleware sets the HTTP Strict Transport Security header on all responses that do not already have it. (it's the max-age of hsts)
SECURE_HSTS_INCLUDE_SUBDOMAINS = True # default is false

# Redirect HTTP to HTTPS
SECURE_SSL_REDIRECT = True # default is false

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'DjangoApp.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / "templates"],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'DjangoApp.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

LOGIN_REDIRECT_URL = "home"
LOGOUT_REDIRECT_URL = "home"
